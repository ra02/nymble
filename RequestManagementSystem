public class RequestManagementSystem {
    private AbstractCameraSystem cameraSystem;
    private PriorityBlockingQueue<ImageCaptureRequestSystem> requestQueue;

// we can easily fetch this locak dependency from java library, so not mentioning this class
    private ReentrantLock lock;

    public RequestManagementSystem(AbstractCameraSystem cameraSystem) {
        this.cameraSystem = cameraSystem;
        this.requestQueue = new PriorityBlockingQueue<>();
        this.lock = new ReentrantLock();
    }

    public void submitCaptureRequest(int urgency, Consumer<Image> success, Consumer<String> failure) {
        ImageCaptureRequestSystem request = new ImageCaptureRequestSystem urgency, success, failure);
        requestQueue.put(request);
        processRequests();
    }


    private void processRequests() {
        lock.lock();
        try {
            while (!requestQueue.isEmpty()) {
                ImageCaptureRequestSystem request = requestQueue.poll();
                if (request != null) {
                    cameraSystem.startCapture(request.getSuccess(), request.getFailure());
                }
            }
        } finally {
            lock.unlock();
        }

    }
}
